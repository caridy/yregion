{"majorversion": 3, "classmap": {"RegionDefinition2": {"name": "RegionDefinition2", "for": "YRegion2", "innerClasses": ["YRegion2"], "namespace": "", "module": "yregion2", "guessedname": "_regionAbstraction", "methods": {"bubbling": {"return": {"type": "Boolean", "description": "Whether or not a listener stop the execution or return false."}, "params": [{"type": "String", "name": "layer", "description": " the name of the event"}, {"type": "Array|String", "name": "msgs", "description": " The collection of messages."}, {"type": "Object", "name": "o", "description": " Literal object to pass thru all the actions."}, {"type": "Boolean", "name": "flag", "description": " if true only bubble up the event, not local confirmation."}], "description": "<p>\nProcess a list of messages, and bubble up those messages all the way up thru the parents\n</p>", "guessedname": "bubbling", "guessedtype": "function"}, "ready": {"return": {"type": "Object", "description": "region reference to support chaining"}, "description": "<p>\nget the region ready when all the requiredment, dependencies and DOM element available\n</p>", "guessedname": "ready", "guessedtype": "function"}, "setContent": {"return": {"type": "Object", "description": "region reference to support chaining"}, "params": [{"type": "String", "name": "xpath", "description": " a selector to localize an node element within the region"}, {"type": "String|Object", "name": "bd", "description": " the string to be set as a content of the node"}], "description": "<p>\nSet a new content for node element within the region\n</p>", "guessedname": "setContent", "guessedtype": "function"}, "use": {"return": {"type": "Object", "description": "region reference to support chaining"}, "params": [{"type": "Array", "name": "Arguments", "description": ""}], "description": "<p>\ninsert a set of YUI Modules and execute a callback method. The last argument in the list is the callback function\n</p>", "guessedname": "use", "guessedtype": "function"}, "setBody": {"return": {"type": "Object", "description": "region reference to support chaining"}, "params": [{"type": "String|Object", "name": "bd", "description": " the string to be set as a content of the region"}], "description": "<p>\nSet a new content for the region\n</p>", "guessedname": "setBody", "guessedtype": "function"}, "wakeChild": {"return": {"type": "Object", "description": "region reference to support chaining"}, "params": [{"type": "String", "name": "guid", "description": " the global unique identifier for a child region"}], "description": "<p>\nWake a child region, initializing a lazyload region instance\n</p>", "guessedname": "wakeChild", "guessedtype": "function"}, "initChild": {"return": {"type": "Object", "description": "region reference to support chaining"}, "params": [{"type": "String", "name": "guid", "description": " the global unique identifier for a child region"}, {"type": "Object", "name": "mod", "description": " configuration object for the child region that should be initialized."}], "description": "<p>\nInit a child region instance\n</p>", "guessedname": "initChild", "guessedtype": "function"}, "init": {"return": {"type": "Object", "description": "region reference to support chaining"}, "description": "<p>\nexecute the internal initialization process for the region\n</p>", "guessedname": "init", "guessedtype": "function"}, "getChild": {"return": {"type": "Object", "description": "a reference to a child region"}, "params": [{"type": "String", "name": "guid", "description": " for a child region."}], "description": "<p>\ngetting a child region based on the GUID.\n</p>", "guessedname": "getChild", "guessedtype": "function"}, "destroy": {"return": {"type": "", "description": "void"}, "params": [{"type": "Object", "name": "arg", "description": " Literal object with more information about the destroy action."}], "description": "<p>\nDestroy the region object. Only the parent, the application layer, a region that knows this region, or the region itself \ncan destroy the region. \n</p>", "guessedname": "destroy", "guessedtype": "function"}, "setChild": {"return": {"type": "Object", "description": "region reference to support chaining"}, "params": [{"type": "Object", "name": "mod", "description": " configuration object for a new child region."}], "description": "<p>\nSet a new child for the current region.\n</p>", "guessedname": "setChild", "guessedtype": "function"}, "include": {"return": {"type": "Object", "description": "region reference to support chaining"}, "params": [{"type": "Array", "name": "mods", "description": " set of YUI modules that most be included in the current page"}, {"type": "Array", "name": "files", "description": " set of files that should be included in the current page"}, {"type": "Function", "name": "callback", "description": " a function to call when the YUI modules and the files get loaded"}], "description": "<p>\ninclude a set or requirements and dependencies before intanciate the region\n</p>", "guessedname": "include", "guessedtype": "function"}, "setViewport": {"return": {"type": "object", "description": "region reference to support chaining"}, "params": [{"type": "Object", "name": "o", "description": " literal object with the new configuration for the viewport"}], "description": "Set new dimention properties for the current region\nThe viewport o configuration looks like this: \n<p>\n{width: 10, height: 10, ... }\n</p>", "guessedname": "setViewport", "guessedtype": "function"}, "initPlugin": {"return": {"type": "Object", "description": "region reference to support chaining"}, "params": [{"type": "String", "name": "name", "description": " the plugin that should be injected within the region"}], "description": "<p>\ninject a plugin within the region\n</p>", "guessedname": "initPlugin", "guessedtype": "function"}, "get": {"return": {"type": "Node", "description": "the first node element for the specific query"}, "params": [{"type": "String", "name": "xpath", "description": " for the desired element."}, {"type": "Node", "name": "node", "description": " only if you want to be more specific, using this node as the root element for the search."}], "description": "<p>\ngetting a node element based on the CSS selector.\n</p>", "guessedname": "get", "guessedtype": "function"}, "fire": {"return": {"type": "boolean", "description": "the execution result, true if a listener stop the execution."}, "params": [{"type": "String", "name": "layer", "description": " the name of the message to fire"}, {"type": "Object", "name": "o", "description": " literal object to attach to the message"}], "description": "Fire a message across the region", "guessedname": "fire", "guessedtype": "function"}, "broadcast": {"return": {"type": "Boolean", "description": "Whether or not a listener stop the execution or return false."}, "params": [{"type": "String", "name": "message", "description": " the name of the message"}, {"type": "Object", "name": "o", "description": " Literal object to pass thru all the actions."}, {"type": "Boolean", "name": "flag", "description": " if true only broadcast the event, not local confirmation."}], "description": "<p>\nProcess a message, and broadcasting the message to all the child regions\n</p>", "guessedname": "broadcast", "guessedtype": "function"}, "onAvailable": {"return": {"type": "Object", "description": "region reference to support chaining"}, "params": [{"type": "Function", "name": "f", "description": " a function to call when the DOM element that represent the region become available"}], "description": "<p>\nWaiting until the DOM element that represents the region become available\n</p>", "guessedname": "onAvailable", "guessedtype": "function"}, "addToBody": {"return": {"type": "Object", "description": "region reference to support chaining"}, "params": [{"type": "String|Object", "name": "bd", "description": " an string or a object that represent a DOM element thru a literal"}, {"type": "Node", "name": "mod", "description": " configuration object for the child region that should be initialized."}], "description": "<p>\nAdd a new DOM structure (content or DOM representation) into the region or a node element within the region\n</p>", "guessedname": "addToBody", "guessedtype": "function"}, "on": {"return": {"type": "object", "description": "region reference to support chaining"}, "params": [{"type": "String", "name": "layer", "description": " the name of the message to listen for"}, {"type": "Function", "name": "listener", "description": " callback function"}, {"type": "Object", "name": "args", "description": " literal object that you want to use when this listener get executed"}], "description": "Set a new listener for an specific message", "guessedname": "on", "guessedtype": "function"}, "execute": {"return": {"type": "Object", "description": "a YUI Connection Manager handle object."}, "params": [{"type": "String", "name": "command", "description": " the value for the command object passed thru the AJAX request as GET (command=value)"}, {"type": "Object", "name": "args", "description": " Literal object with a set of post argument to send thru the AJAX request."}, {"type": "Object", "name": "callback", "description": " a function or an object that represent a callback for the AJAX request."}], "description": "<p>\nExecute an AJAX command, sending a request to the server, and calling the corresponding callback\n</p>", "guessedname": "execute", "guessedtype": "function"}, "getViewport": {"return": {"type": "Object", "description": "the literal object with the viewport properties"}, "description": "Return the visualization properties for the current region\nThe viewport obj looks like this: \n<p>\n{x:10, y:10, width: 10, height: 10, ... }\n</p>", "guessedname": "getViewport", "guessedtype": "function"}, "install": {"return": {"type": "Object", "description": "region reference to support chaining"}, "params": [{"type": "Object", "name": "plugin", "description": " a object with the plugin definition"}], "description": "<p>\nplug all the actions defined by a plugin within the region\n</p>", "guessedname": "install", "guessedtype": "function"}, "signature": {"return": {"type": "Object", "description": "the literal object with the signed arguments, null if the signing process fail."}, "params": [{"type": "Object", "name": "args", "description": " literal object to sign"}], "description": "<p>\nSign a set of arguments based on a flagged property. If another listener had claim the message,\nsetting the flagged to true, which means that no other listener should consume this message.\n</p>", "guessedname": "signature", "guessedtype": "function"}}, "static": "", "file": "yregion2.js", "guessedtype": "property", "shortname": "RegionDefinition2", "description": "Provides a set of generic methods that each region instance inherits automatically."}, "RegionDefinition3": {"name": "RegionDefinition3", "for": "YRegion3", "innerClasses": ["YRegion3"], "namespace": "", "module": "yregion3", "guessedname": "_regionAbstraction", "methods": {"getHooks": {"return": {"type": "Array", "description": "The collection of hooks (string)."}, "params": [{"type": "HTMLElement", "name": "node", "description": " A node reference to get the className and return the hooks list."}], "description": "<p>\nAnalizing all the classes for the node, and getting the hooks.\n</p>", "guessedname": "getHooks", "guessedtype": "function"}, "getYUIButton": {"return": {"type": "Object", "description": "A reference to a real YUI Button object."}, "params": [{"type": "HTMLElement", "name": "node", "description": " The html element."}], "description": "<p>\ngetting the real YUI Button reference from a dom element, usually the target for a certain event\n</p>", "guessedname": "getYUIButton", "guessedtype": "function"}, "get": {"return": {"type": "Object", "description": ""}, "params": [{"type": "String", "name": "xpath", "description": " for the desired element."}, {"type": "Object", "name": "node", "description": " only if you want to be more specific, using this node as the root element for the search."}], "description": "<p>\ngetting a node element based on the CSS selector.\n</p>", "guessedname": "get", "guessedtype": "function"}, "getViewport": {"return": {"type": "object} the literal object with the par {x:10, y:10, width: 10, height: 10, .... ", "description": ""}, "description": "Return the visualization properties for the current region\nThe viewport obj looks like this: \n<p>\n{x:10, y:10, width: 10, height: 10, ... }\n</p>", "guessedname": "getViewport", "guessedtype": "function"}, "bubbling": {"return": {"type": "Boolean", "description": "Whether or not a listener stop the execution or return false."}, "params": [{"type": "String", "name": "layer", "description": " the name of the event"}, {"type": "Array|String", "name": "msgs", "description": " The collection of messages."}, {"type": "Object", "name": "o", "description": " Literal object to pass thru all the actions."}, {"type": "Boolean", "name": "flag", "description": " if true only bubble up the event, not local confirmation."}], "description": "<p>\nProcess a list of messages, and bubble up those messages all the way up thru the parents\n</p>", "guessedname": "bubbling", "guessedtype": "function"}, "broadcast": {"return": {"type": "Boolean", "description": "Whether or not a listener stop the execution or return false."}, "params": [{"type": "String", "name": "message", "description": " the name of the message"}, {"type": "Object", "name": "o", "description": " Literal object to pass thru all the actions."}, {"type": "Boolean", "name": "flag", "description": " if true only broadcast the event, not local confirmation."}], "description": "<p>\nProcess a message, and broadcasting the message to all the child regions\n</p>", "guessedname": "broadcast", "guessedtype": "function"}, "augmentURI": {"return": {"type": "", "description": "string"}, "description": "augment an url with more parameters, overriding...", "params": [{"type": "string", "name": "url", "description": ""}, {"type": "string|array", "name": "m", "description": "   an string like a querystring or an json object"}], "guessedname": "augmentURI", "guessedtype": "function", "public": ""}, "getOwnerByClassName": {"return": {"type": "HTMLElement | null", "description": "The matching DOM node or null if none found."}, "params": [{"type": "HTMLElement", "name": "node", "description": " The html element."}, {"type": "String", "name": "className", "description": " the class name to search for"}, {"type": "String", "name": "level", "description": " the analyzis level, for performance you should try to find the ancestor within a range of levels"}], "description": "<p>\nSearching for an event owner based on the classname, it's similar to the ancestor method but applying the same routine to the node itself\n</p>", "guessedname": "getOwnerByClassName", "guessedtype": "function"}, "inject": {"return": {"type": "Object", "description": "conf literal object with the configuration of the block to load."}, "params": [{"type": "HTMLElement", "name": "node", "description": " The html element."}], "description": "<p>\ninserting a CSS or JS block (inline block) in the current document\n</p>", "guessedname": "inject", "guessedtype": "function"}, "getChild": {"return": {"type": "Object", "description": ""}, "params": [{"type": "String", "name": "guid", "description": " for a child region."}], "description": "<p>\ngetting a child region based on the GUID.\n</p>", "guessedname": "getChild", "guessedtype": "function"}, "setChild": {"return": {"type": "Object", "description": ""}, "params": [{"type": "Object", "name": "mod", "description": " reference to a certain region."}], "description": "<p>\nsetting a new child for the current region.\n</p>", "guessedname": "setChild", "guessedtype": "function"}, "setViewport": {"return": {"type": "object", "description": "region reference to support chaining"}, "params": [{"type": "Object", "name": "o", "description": " literal object with the new configuration for the viewport"}], "description": "Set new dimention properties for the current region\nThe viewport o configuration looks like this: \n<p>\n{width: 10, height: 10, ... }\n</p>", "guessedname": "setViewport", "guessedtype": "function"}}, "static": "", "file": "yregion3.js", "guessedtype": "property", "shortname": "RegionDefinition3", "description": "Provides a set of generic methods that each region instance inherits automatically."}, "RegionLoader2": {"return": "{Object} RegionLoader instance", "name": "RegionLoader2", "for": "YRegion2", "innerClasses": ["YRegion2"], "constructors": [{"params": [{"type": "String", "name": "ns", "description": " RegionDefinition namespace"}], "description": "Provides a prototype to control the loading process for an undefined RegionDefinition. A RegionLoader \ninstance controls the loading of a RegionDefinition, and notify to the regions when its definition become available."}], "namespace": "", "module": "yregion2", "guessedname": "_modLoader", "methods": {"load": {"return": {"type": "Object", "description": "Get Utility handler."}, "params": [{"type": "String", "name": "uri", "description": " URL to load a file on demand (js or css)"}, {"type": "Object", "name": "callback", "description": " Literal object (success, failure)."}], "description": "<p>\nLoad a Region Definition\n</p>", "guessedname": "load", "guessedtype": "function"}, "subscribe": {"return": {"type": "", "description": "void"}, "params": [{"type": "Object", "name": "mod", "description": " Instance of the new region."}], "description": "<p>\nSubscribe a new instance to this region definition, when the class become available, the \nsubscriber will get a notification.\n</p>", "guessedname": "subscribe", "guessedtype": "function"}, "create": {"return": {"type": "", "description": "void"}, "params": [{"type": "Object", "name": "mod", "description": " Instance of the new region."}], "description": "<p>\nCreate a new instance, inheriting the region definition methods.\n</p>", "guessedname": "create", "guessedtype": "function"}, "set": {"return": {"type": "", "description": "void"}, "params": [{"type": "Object", "name": "object", "description": " with the region definition."}], "description": "<p>\nSet a Region Definition, when a new region definition is included in the current page,\nthese method will be executed to notify to everybody that a new region definition is ready.\n</p>", "guessedname": "set", "guessedtype": "function"}, "notify": {"return": {"type": "", "description": "void"}, "description": "<p>\nNotify to all the subscribers (queue of regions) that the region definition is ready, this process will \ngarranty that this region instances will be instantiated after the class become available.\n</p>", "guessedname": "notify", "guessedtype": "function"}}, "file": "yregion2.js", "guessedtype": "function", "shortname": "RegionLoader2", "description": "Provides a prototype to control the loading process for an undefined RegionDefinition. A RegionLoader \ninstance controls the loading of a RegionDefinition, and notify to the regions when its definition become available."}, "RegionLoader3": {"return": "{Object} RegionLoader instance", "name": "RegionLoader3", "for": "YRegion3", "innerClasses": ["YRegion3"], "constructors": [{"params": [{"type": "String", "name": "ns", "description": " RegionDefinition namespace"}], "description": "Provides a prototype to control the loading process for an undefined RegionDefinition. A RegionLoader \ninstance controls the loading of a RegionDefinition, and notify to the regions when its definition become available."}], "namespace": "", "module": "yregion3", "guessedname": "_modLoader", "methods": {"load": {"return": {"type": "Object", "description": "Get Utility handler."}, "params": [{"type": "String", "name": "uri", "description": " URL to load a file on demand (js or css)"}, {"type": "Object", "name": "callback", "description": " Literal object (success, failure)."}], "description": "<p>\nloading the Region Definition\n</p>", "guessedname": "load", "guessedtype": "function"}, "subscribe": {"return": {"type": "", "description": "void"}, "params": [{"type": "Object", "name": "mod", "description": " Instance of the new region."}], "description": "<p>\nsubscribing a new instance to this region definition, when the class become available, the \nsubscriber will get a notification.\n</p>", "guessedname": "subscribe", "guessedtype": "function"}, "create": {"return": {"type": "", "description": "void"}, "params": [{"type": "Object", "name": "mod", "description": " Instance of the new region."}], "description": "<p>\ncreating a new instance, inheriting the region definition methods.\n</p>", "guessedname": "create", "guessedtype": "function"}, "set": {"return": {"type": "", "description": "void"}, "params": [{"type": "Object", "name": "object", "description": " with the region definition."}], "description": "<p>\nsetting the Region Definition, when a new region definition is included in the current page,\nthese method will be executed to notify to everybody that a new region definition is ready.\n</p>", "guessedname": "set", "guessedtype": "function"}, "notify": {"return": {"type": "", "description": "void"}, "description": "<p>\nnotifying to all the subscribers that the region definition is ready, this process will \ngarranty that this region instances will be instantiated after the class become available.\n</p>", "guessedname": "notify", "guessedtype": "function"}}, "file": "yregion3.js", "guessedtype": "function", "shortname": "RegionLoader3", "description": "Provides a prototype to control the loading process for an undefined RegionDefinition. A RegionLoader \ninstance controls the loading of a RegionDefinition, and notify to the regions when its definition become available."}, "YRegion3": {"name": "YRegion3", "namespace": "", "module": "yregion3", "guessedname": "YRegion3", "methods": {"_trickling": {"return": {"type": "Object", "description": "A Region object reference."}, "static": "", "params": [{"type": "Object", "name": "region", "description": " A Region object reference."}, {"type": "Node|Object", "name": "target", "description": " A Node instance that represents the target HTMLElement."}], "description": "Inspecting child regions to determine which region owns the target element.", "private": ""}, "_loaderDispatch": {"static": "", "return": {"type": "", "description": "void"}, "description": "Create a message object based on a DOM Event", "private": ""}, "_initPlugin": {"return": {"type": "", "description": "void"}, "static": "", "params": [{"type": "String", "name": "name", "description": " Plugin name."}], "description": "Inject a plugin into the global region represented by \"document.body\".", "private": ""}, "_getSemantic": {"return": {"type": "Object", "description": "Semantic object that represents the semantic of the target element"}, "static": "", "params": [{"type": "Object", "name": "e", "description": " - DOM Event reference."}], "description": "Transform the target element into a semantic object", "private": ""}, "_parseHooks": {"return": {"type": "Array", "description": "A collection of hooks."}, "static": "", "params": [{"type": "String", "name": "str", "description": " The classname of a target DOM element."}], "description": "Parse an string and return the list of hooks", "private": ""}, "_createMsgObject": {"return": {"type": "Object", "description": "the message object with the status and the stopEvent method"}, "static": "", "params": [{"type": "Object", "name": "e", "description": " - YUI Event Object."}], "description": "Create a message object based on a DOM Event, the message object will be passed\nto all the listeners, and can be populated using the signature event.", "private": ""}, "_getShorthands": {"return": {"type": "Object", "description": "A object with the default list of shorthands."}, "description": "Creating an object with the shorthands references."}, "_loaderNext": {"return": {"type": "", "description": "void"}, "static": "", "params": [{"type": "Boolean", "name": "notify", "description": " Whether or not the callback method should be called."}], "description": "Continue with the loading process, removing the first set from the list, \nand continue with the next in line.", "private": ""}, "_parseUri": {"return": {"type": "Object", "description": "A object that represent an URL."}, "static": "", "params": [{"type": "String", "name": "str", "description": " URL to be parsed."}, {"type": "Boolean", "name": "strictMode", "description": " Whether or not to use strict mode to parse the url."}], "description": "Parsing an url using strict of loose mode.\nTODO: modify to use strict mode with an static regex", "private": ""}, "_cache": {"return": {"type": "", "description": "void"}, "static": "", "params": [{"type": "Array", "name": "files", "description": " An array of files objects."}], "description": "Add a list of files to the hash table with the cachable files.", "private": ""}, "_initRegion": {"return": {"type": "", "description": "void"}, "static": "", "params": [{"type": "String", "name": "guid", "description": " Global Unique ID for a region instance."}, {"type": "Object", "name": "mod", "description": " An object that represents an new instance."}], "description": "Create a new instance of a region.", "private": ""}, "_cached": {"return": {"type": "Boolean", "description": "Whether or not the file was cached."}, "static": "", "params": [{"type": "Object", "name": "f", "description": " File object."}], "description": "Check if a file object was already cached based in the fullpath", "private": ""}}, "static": "", "file": "yregion3.js", "guessedtype": "function", "shortname": "YRegion3", "description": "Provides YRegion3 Utility methods."}, "YRegion2": {"name": "YRegion2", "namespace": "", "module": "yregion2", "guessedname": "YRegion2", "methods": {"getOwnerByTagName": {"return": {"type": "Node", "description": "The matching DOM node or null if none found."}, "params": [{"type": "Node", "name": "node", "description": " The Node element."}, {"type": "String", "name": "tagName", "description": " the tagName to search for"}, {"type": "Integer", "name": "level", "description": " the analyzis level, for performance you should try to find the ancestor within a range of levels"}], "description": "<p>\nSearching for an event owner based on the tagMame, it's similar to the ancestor method but applying the same routine to the node itself\n</p>", "guessedname": "getOwnerByTagName", "guessedtype": "function"}, "isPlugin": {"return": {"type": "Boolean", "description": "Whether or not the plugin definition was registered."}, "params": [{"type": "String", "name": "name", "description": " the name of the plugin to verify"}], "description": "<p>\nCheck if a plugin definition was already registered\n</p>", "guessedname": "isPlugin", "guessedtype": "function"}, "augmentURI": {"return": {"type": "", "description": "string"}, "description": "<p>\nAugment an url with more parameters, overriding...\n</p>", "params": [{"type": "string", "name": "url", "description": ""}, {"type": "string|array", "name": "m", "description": "   an string like a query string or an json object"}], "guessedname": "augmentURI", "guessedtype": "function", "public": ""}, "notify": {"return": {"type": "boolean", "description": "the execution result, true if a listener stop the execution."}, "params": [{"type": "String", "name": "guid", "description": " the global unique identifier for a region that should receive the message"}, {"type": "String", "name": "layer", "description": " the name of the message to fire"}, {"type": "Object", "name": "o", "description": " literal object to attach to the message"}], "description": "<p>\nFire a notification message to a region\n</p>", "guessedname": "notify", "guessedtype": "function"}, "_cache": {"return": {"type": "", "description": "void"}, "static": "", "params": [{"type": "Array", "name": "files", "description": " An array of files objects."}], "description": "Add a list of files to the hash table with the cachable files.", "private": ""}, "initRegion": {"return": {"type": "object", "description": "region reference to support chaining"}, "params": [{"type": "String", "name": "guid", "description": " global unique identifier (div->id) for the new region instance"}, {"type": "Object", "name": "conf", "description": " a region instance configuration object"}], "description": "<p>\nCreate a new instance of a region definition based on a configuration object\n</p>", "guessedname": "initRegion", "guessedtype": "function"}, "_trickling": {"return": {"type": "Object", "description": "A Region object reference."}, "static": "", "params": [{"type": "Object", "name": "region", "description": " A Region object reference."}, {"type": "Node", "name": "target", "description": " A Node instance that represents the target."}], "description": "Inspecting child regions to determine which region owns the target element.", "private": ""}, "getYUIButton": {"return": {"type": "Object", "description": "A reference to a real YUI Button object."}, "params": [{"type": "Node", "name": "node", "description": " The Node element."}], "description": "<p>\nget the real YUI Button reference from a node element, usually the target for a certain event\n</p>", "guessedname": "getYUIButton", "guessedtype": "function"}, "destroyRegion": {"return": {"type": "", "description": "void"}, "params": [{"type": "Object", "name": "conf", "description": " a region instance configuration object"}], "description": "<p>\nDestroy a instance of a region definition based on a configuration object\n</p>", "guessedname": "destroyRegion", "guessedtype": "function"}, "_getShorthands": {"static": "", "return": {"type": "Object", "description": "A object with the default list of shorthands."}, "description": "<p>\nCreating an object with the shorthands references.\n</p>", "private": ""}, "inject": {"return": {"type": "object", "description": "region reference to support chaining"}, "params": [{"type": "Object", "name": "conf", "description": " a literal object with the configuration of the JS and CSS that you want to insert in the page dynamically"}], "description": "<p>\nInject JS and/or CSS blocks in the current page\n</p>", "guessedname": "inject", "guessedtype": "function"}, "_loaderNext": {"return": {"type": "", "description": "void"}, "static": "", "params": [{"type": "Boolean", "name": "notify", "description": " Whether or not the callback method should be called."}], "description": "Continue with the loading process, removing the first set from the list, \nand continue with the next in line.", "private": ""}, "setPluginDefinition": {"return": {"type": "object", "description": "region reference to support chaining"}, "params": [{"type": "String", "name": "name", "description": " the name of the plugin"}, {"type": "Object", "name": "plugin", "description": " an object with the plugin definition"}], "description": "<p>\nRegister a new plugin definition in the current page\n</p>", "guessedname": "setPluginDefinition", "guessedtype": "function"}, "initPlugin": {"return": {"type": "object", "description": "region reference to support chaining"}, "params": [{"type": "String", "name": "name", "description": " the name of the plugin to be injected into the global region"}], "description": "<p>\nInject/Instantiate a plugin into a global region definition (document.body)\n</p>", "guessedname": "initPlugin", "guessedtype": "function"}, "_getSemantic": {"return": {"type": "Object", "description": "Semantic object that represents the semantic of the target element"}, "static": "", "params": [{"type": "Object", "name": "e", "description": " - DOM Event reference."}], "description": "Transform the target element into a semantic object", "private": ""}, "_parseHooks": {"return": {"type": "Array", "description": "A collection of hooks."}, "static": "", "params": [{"type": "String", "name": "str", "description": " The classname of a target DOM element."}], "description": "Parse an string and return the list of hooks", "private": ""}, "clearRegion": {"return": {"type": "", "description": "void"}, "params": [{"type": "String", "name": "guid", "description": " global unique identifier (div->id) for the region instance"}], "description": "<p>\nClear a instance of a region definition based on a guid\n</p>", "guessedname": "clearRegion", "guessedtype": "function"}, "broadcast": {"return": {"type": "boolean", "description": "the execution result, true if a listener stop the execution."}, "params": [{"type": "String", "name": "msg", "description": " the name of the message to fire"}, {"type": "Object", "name": "o", "description": " literal object to attach to the message"}], "description": "<p>\nFire a broadcast message across all the application\n</p>", "guessedname": "broadcast", "guessedtype": "function"}, "_createMsgObject": {"return": {"type": "Object", "description": "the message object with the status and the stopEvent method"}, "static": "", "params": [{"type": "Object", "name": "e", "description": " - event reference."}], "description": "Create a message object based on a DOM Event, the message object will be passed\nto all the listeners, and can be populated using the signature event.", "private": ""}, "_initRegion": {"return": {"type": "", "description": "void"}, "static": "", "params": [{"type": "String", "name": "guid", "description": " Global Unique ID for a region instance."}, {"type": "Object", "name": "mod", "description": " An object that represents an new instance."}], "description": "Create a new instance of a region.", "private": ""}, "getHooks": {"return": {"type": "Array", "description": "The collection of hooks (string)."}, "params": [{"type": "Node", "name": "node", "description": " A node element to get the className and return the hooks list."}], "description": "<p>\nAnalyze all the classes for the node, and getting the list of hooks.\n</p>", "guessedname": "getHooks", "guessedtype": "function"}, "_loaderDispatch": {"static": "", "return": {"type": "", "description": "void"}, "description": "Create a message object based on a DOM Event", "private": ""}, "_initPlugin": {"return": {"type": "", "description": "void"}, "static": "", "params": [{"type": "String", "name": "name", "description": " Plugin name."}], "description": "Inject a plugin into the global region represented by \"document.body\".", "private": ""}, "isRegion": {"return": {"type": "Boolean", "description": "Whether or not the region definition was registered."}, "params": [{"type": "String", "name": "ns", "description": " namespace for the region definition"}], "description": "<p>\nCheck if a region definition was already registered\n</p>", "guessedname": "isRegion", "guessedtype": "function"}, "_parseUri": {"return": {"type": "Object", "description": "A object that represent an URL."}, "static": "", "params": [{"type": "String", "name": "str", "description": " URL to be parsed."}, {"type": "Boolean", "name": "strictMode", "description": " Whether or not to use strict mode to parse the url."}], "description": "Parsing an url using strict of loose mode.\nTODO: modify to use strict mode with an static regex", "private": ""}, "getOwnerByClassName": {"return": {"type": "Node", "description": "The matching DOM node or null if none found."}, "params": [{"type": "Node", "name": "node", "description": " The Node element."}, {"type": "String", "name": "className", "description": " the class name to search for"}, {"type": "Integer", "name": "level", "description": " the analyzis level, for performance you should try to find the ancestor within a range of levels"}], "description": "<p>\nSearching for an event owner based on the classname, it's similar to the ancestor method but applying the same routine to the node itself\n</p>", "guessedname": "getOwnerByClassName", "guessedtype": "function"}, "setRegionDefinition": {"return": {"type": "object", "description": "region reference to support chaining"}, "params": [{"type": "String", "name": "ns", "description": " namespace for the region definition"}, {"type": "Object", "name": "c", "description": " region definition"}], "description": "<p>\nRegister a new region definition in the current page\n</p>", "guessedname": "setRegionDefinition", "guessedtype": "function"}, "_cached": {"return": {"type": "Boolean", "description": "Whether or not the file was cached."}, "static": "", "params": [{"type": "Object", "name": "f", "description": " File object."}], "description": "Check if a file object was already cached based in the fullpath", "private": ""}}, "static": "", "file": "yregion2.js", "guessedtype": "function", "shortname": "YRegion2", "description": "Provides YRegion2 Utility methods."}}, "version": "1.0.0", "modules": {"yregion3": {"description": "Provides YRegion3 Utility definition based on YUI 3.x.\nYRegion3 allows us to define the functionality of different areas (regions) on the page, \ncontrolling the events, the loading process of its dependencies and setting a secure scope \nto define the region functionality in a consistent way. \nIt also creates a communication infrastructure layer among the regions on the page.", "submodules": [], "classlist": ["YRegion3", "RegionLoader3", "RegionDefinition3"], "filelist": [], "subdata": {}, "name": "yregion3"}, "yregion2": {"description": "Provides YRegion2 Utility definition based on YUI 2.x.\nYRegion2 allows us to define the functionality of different areas (regions) on the page, \ncontrolling the events, the loading process of its dependencies and setting a secure scope \nto define the region functionality in a consistent way. \nIt also creates a communication infrastructure layer among the regions on the page.", "submodules": [], "classlist": ["YRegion2", "RegionLoader2", "RegionDefinition2"], "filelist": ["yregion2.js", "yregion3.js"], "subdata": {}, "name": "yregion2"}}, "filemap": {"yregion3.js": {"classlist": ["YRegion3", "RegionLoader3", "RegionDefinition3"], "name": "yregion3.js", "module": "yregion2"}, "yregion2.js": {"classlist": ["YRegion2", "RegionLoader2", "RegionDefinition2"], "name": "yregion2.js", "module": "yregion2"}}}